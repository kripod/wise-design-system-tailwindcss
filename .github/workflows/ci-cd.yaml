name: CI/CD
on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  build-lint-test:
    name: Build, lint, test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/bootstrap
      - run: pnpm run build
      - run: pnpm run lint
      - run: pnpm run --if-present test

  chromatic:
    name: Run Chromatic
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: ./.github/actions/bootstrap
      - uses: chromaui/action@v11
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          buildScriptName: build:stories
          exitZeroOnChanges: true
          onlyChanged: true
          externals: |
            **/*.css
            pnpm-lock.yaml
            src/tailwind-base.ts
            tailwind.config.ts

  release-latest:
    name: Release latest version
    needs: [build-lint-test]
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_ACCESS_TOKEN }}
      - uses: ./.github/actions/bootstrap
        with:
          npm-token: ${{ secrets.NPM_TOKEN_AUTOMATION }}
      - run: pnpm run build
      # - name: Set up commit signing
      #   uses: crazy-max/ghaction-import-gpg@v6
      #   with:
      #     gpg_private_key: ${{ secrets.GPG_SIGN_KEY }}
      #     git_user_signingkey: true
      #     git_commit_gpgsign: true
      - name: Create release PR or publish to npm
        uses: changesets/action@v1
        with:
          publish: pnpm exec changeset publish
          commit: "chore: release"
          title: "chore: release"
          # setupGitUser: false
        env:
          GITHUB_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
