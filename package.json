{
  "name": "@wise/design-system-tailwindcss",
  "version": "0.2.1",
  "description": "Experimental web implementation of Wise Design System, based upon Tailwind CSS.",
  "keywords": [
    "design-system",
    "tailwindcss"
  ],
  "homepage": "https://github.com/transferwise/design-system-web-tailwindcss#readme",
  "bugs": "https://github.com/transferwise/design-system-web-tailwindcss/issues",
  "repository": "transferwise/design-system-web-tailwindcss",
  "license": "MIT",
  "author": "Wise Payments Ltd.",
  "sideEffects": [
    "*.css"
  ],
  "exports": {
    ".": {
      "types": "./dist/mod.d.ts",
      "import": "./dist/mod.mjs",
      "require": "./dist/mod.js"
    },
    "./styles.css": "./dist/styles.css",
    "./styles-legacy.css": "./dist/styles-legacy.css"
  },
  "main": "./dist/mod.js",
  "types": "./dist/mod.d.ts",
  "files": [
    "dist/",
    "src/",
    "!**/*.tsbuildinfo"
  ],
  "scripts": {
    "prepare": "husky install",
    "dev": "ladle dev",
    "build": "npm-run-all --parallel build:*",
    "build:lib": "npm-run-all --parallel build:lib:css build:lib:js",
    "build:lib:watch": "npm-run-all --parallel build:lib:*:watch",
    "build:lib:css": "postcss src/styles.css --output dist/styles.css && postcss src/styles-legacy.css --output dist/styles-legacy.css",
    "build:lib:css:watch": "pnpm run build:lib:css --watch",
    "build:lib:js": "rollup --config --sourcemap",
    "build:lib:js:watch": "pnpm run build:lib:js --watch",
    "build:stories": "ladle build",
    "start": "ladle preview",
    "clean": "git clean --interactive -dx --exclude .env.local --exclude .env.*.local --exclude node_modules/ --exclude .husky/",
    "lint": "npm-run-all --parallel lint:js+ts lint:format lint:types",
    "lint:js+ts": "eslint --ext .js,.jsx,.mjs,.ts,.tsx,.mts --ignore-path .gitignore .",
    "lint:format": "prettier --check .",
    "lint:types": "tsc --noEmit",
    "lint:fix": "npm-run-all --serial lint:fix:*",
    "lint:fix:js+ts": "pnpm run lint:js+ts --fix",
    "lint:fix:format": "prettier --write ."
  },
  "dependencies": {
    "@babel/runtime": "^7.23.5",
    "@floating-ui/react": "^0.26.3",
    "@headlessui/react": "^1.7.17",
    "@radix-ui/react-id": "^1.0.1",
    "@react-aria/overlays": "^3.19.0",
    "clsx": "^2.0.0",
    "css-homogenizer": "^3.2.1",
    "merge-props": "^6.0.0",
    "modern-normalize": "^2.0.0",
    "react-merge-refs": "^2.1.1",
    "ts-essentials": "^9.4.1",
    "use-sync-external-store": "^1.2.0"
  },
  "devDependencies": {
    "@babel/core": "7.23.5",
    "@babel/plugin-transform-runtime": "7.23.4",
    "@babel/preset-env": "7.23.5",
    "@babel/preset-react": "7.23.3",
    "@babel/preset-typescript": "7.23.3",
    "@changesets/changelog-github": "0.5.0",
    "@changesets/cli": "2.27.1",
    "@fontsource-variable/inter": "5.0.16",
    "@ladle/react": "4.0.2",
    "@rollup/plugin-babel": "6.0.4",
    "@rollup/plugin-typescript": "11.1.5",
    "@tailwindcss/container-queries": "0.1.1",
    "@transferwise/icons": "3.12.0",
    "@tsconfig/recommended": "1.0.3",
    "@types/babel__core": "7.20.5",
    "@types/node": "20.10.4",
    "@types/react": "18.2.42",
    "@types/react-dom": "18.2.17",
    "@types/use-sync-external-store": "^0.0.6",
    "@vitejs/plugin-react": "4.2.1",
    "@wise/eslint-config": "9.2.1",
    "babel-plugin-optimize-clsx": "2.6.2",
    "eslint": "8.55.0",
    "eslint-plugin-tailwindcss": "3.13.0",
    "husky": "8.0.3",
    "nano-staged": "0.8.0",
    "npm-run-all": "4.1.5",
    "postcss": "8.4.32",
    "postcss-cli": "11.0.0",
    "postcss-import": "15.1.0",
    "postcss-preset-env": "9.3.0",
    "prettier": "3.1.0",
    "prettier-plugin-tailwindcss": "0.5.9",
    "react": "18.2.0",
    "react-dom": "18.2.0",
    "rollup": "4.6.1",
    "tailwindcss": "3.3.6",
    "typescript": "5.3.3",
    "vite": "5.0.6"
  },
  "peerDependencies": {
    "@transferwise/icons": "^3.1",
    "react": "16.14 - 18",
    "react-dom": "16.14 - 18",
    "typescript": ">=4.5"
  },
  "peerDependenciesMeta": {
    "typescript": {
      "optional": true
    }
  },
  "packageManager": "pnpm@8.11.0",
  "publishConfig": {
    "access": "public"
  }
}
